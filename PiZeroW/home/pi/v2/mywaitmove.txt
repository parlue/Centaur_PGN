def MywaitMove():
	# Wait for a player to lift a piece and set it down somewhere different
	lifted = -1
	placed = -1
	keypressed = 0
	moves = []
	while placed == -1: # and keypressed == 0:
		
# dso scan for move		
		try:
			ser.read(100000)
			tosend = bytearray(b'\x83\x06\x50\x59')
			ser.write(tosend)
			expect = bytearray(b'\x85\x00\x06\x06\x50\x61')
			resp = ser.read(10000)
			resp = bytearray(resp)
			if (bytearray(resp) != expect):
				if (resp[0] == 133 and resp[1] == 0):
					for x in range(0, len(resp) - 1):
						if (resp[x] == 64):
							# Calculate the square to 0(a1)-63(h8) so that
							# all functions match
							fieldHex = resp[x + 1]
							newsquare = rotateFieldHex(fieldHex)
							lifted = newsquare
							#print(lifted)
							moves.append((newsquare+1) * -1)
						if (resp[x] == 65):
							# Calculate the square to 0(a1)-63(h8) so that
							# all functions match
							fieldHex = resp[x + 1]
							newsquare = rotateFieldHex(fieldHex)
							placed = newsquare
							# no move detection
							if lifted == placed and len(moves) == 1:
								moves = []
								placed = -1
							else:
								moves.append(newsquare+1)

		except :
			pass
		try:
			tosend = bytearray(b'\x94\x06\x50\x6a')
			ser.write(tosend)
			expect = bytearray(b'\xb1\x00\x06\x06\x50\x0d')
			resp = ser.read(10000)
			resp = bytearray(resp)
			if (resp.hex() == "b10011065000140a0501000000007d4700"):
				moves.append(200)  # BACK
				placed = 199
			if (resp.hex() == "b10011065000140a0510000000007d175f"):
				moves.append(201) # TICK
				placed = 199
			if (resp.hex() == "b10011065000140a0508000000007d3c7c"):
				moves.append(202)  # UP
				placed = 199
			if (resp.hex() == "b10010065000140a050200000000611d"):
				moves.append(203)  # DOWN
				placed = 199
			if (resp.hex() == "b10010065000140a0540000000006d67"):
				moves.append(204)   # HELP
				placed = 199
			if (resp.hex() == "b10010065000140a0504000000002a68"):
				moves.append(295)   # PLAY
				placed = 199

					
		except:
			pass
		
	#print('return moves: ' + str(moves))
	return moves